%{
  open AST
%}

%start start
%token <string> ATOM
%token <int> NAT
%token EOF L_PAREN R_PAREN CONS CAR CDR PLUS ADD1
%type <AST.Prog> start 
%%

start: prog { $1 }



value:
  | ATOM { Atom($1) }
  | NAT { Natural($1) } 

both:
  | stmnt { $1 }
  | value { $1 }


stmntbody:
  | value {$1}
  | CONS both both { Cons($2, $3) }
  | CAR both  { Car($2) }
  | CDR both  { Cdr($2) }
  | PLUS both both  { Plus( $2, $3) }
  | ADD1 both  { Add1($2) }
  

stmnt:
  | L_PAREN stmntbody R_PAREN { $2 }



prog:
  | stmnt prog { List.rev ($1::$2) }
  | EOF { [] }

  

