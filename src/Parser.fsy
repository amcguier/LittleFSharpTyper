%{
  open AST
%}

%start start
%token <string> ATOM
%token <int> NAT
%token EOF L_PAREN R_PAREN CONS CAR CDR PLUS ADD1
%type <AST.Prog> start 
%%

start: prog { $1 }



value:
  | ATOM { Atom($1) }
  | NAT { Natural($1) } 

both:
  | stmnt { $1 }
  | value { $1 }

stmnt:
  | L_PAREN value R_PAREN { $2 }
  | L_PAREN CONS both both R_PAREN { Cons($3, $4) }
  | L_PAREN CAR both R_PAREN { Car($3) }
  | L_PAREN CDR both R_PAREN { Cdr($3) }
  | L_PAREN PLUS both both R_PAREN { Plus( $3, $4) }
  | L_PAREN ADD1 both R_PAREN { Add1($3) }


prog:
  | stmnt prog { List.rev ($1::$2) }
  | EOF { [] }

  

